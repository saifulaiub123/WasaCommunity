{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location of the container group"
      }
    },
    "azureContainerSuffix": {
      "type": "string",
      "metadata": {
        "description": "Suffix for the azure containers, e.g. .azurecontainer.io"
      }
    },
    "appContainerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name for the container group containing the application (frontend and backend)"
      }
    },
    "dbContainerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name for the container group containing the database"
      }
    },
    "appDnsNameLabel": {
      "type": "string",
      "defaultValue": "wasacommunity-app",
      "metadata": {
          "description": "DNS Name Label for the container group containing the application"
      }
    },
    "dbDnsNameLabel": {
      "type": "string",
      "defaultValue": "wasacommunity-database",
      "metadata": {
          "description": "DNS Name Label for the container group containing the database"
      }
    },
    "frontend": {
      "type": "string",
      "metadata": {
        "description": "Name for the angular-container"
      }
    },
    "backend": {
      "type": "string",
      "metadata": {
        "description": "Name for the aspnetcore-container"
      }
    },
    "database": {
      "type": "string",
      "metadata": {
        "description": "Name for the database-container"
      }
    },
    "frontendImage": {
      "type": "string",
      "metadata": {
        "description": "Frontend image to deploy. Should be of the form accountName/imagename[:tag] for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
      }
    },
    "backendImage": {
      "type": "string",
      "metadata": {
          "description": "Backend image to deploy. Should be of the form accountName/imagename[:tag] for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
      }
    },
    "databaseImage": {
      "type": "string",
      "metadata": {
          "description": "Database image to deploy. Should be of the form accountName/imagename[:tag] for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
      }
    },
    "shareName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Storage Share"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Storage Account. Must be unique in Azure."
      }
    },
    "storageaccountkey": {
      "type": "securestring",
      "metadata": {
        "description": "The name of the Storage Account Key. Can be found under Storage Account > Access keys"
      }
    },
    "volumeName": {
      "type": "string",
      "metadata": {
        "description": "The name of the volume"
      }
    },
    "mountPoint": {
      "type": "string",
      "metadata": {
        "description": "The path to where the volume should be mounted inside the container"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('appContainerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[parameters('dbContainerGroupName')]"
      ],
      "properties": {
        "containers": [
          {
            "name": "[parameters('frontend')]",
            "properties": {
              "command": [],
              "image": "[parameters('frontendImage')]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.0
                }
              }
            }
          },
          {
            "name": "[parameters('backend')]",
            "properties": {            
              "command": ["./wait-for-it.sh", "[concat(parameters('dbDnsNameLabel'),'.',parameters('location'),parameters('azureContainerSuffix'),':1433')]", "--timeout=8", "--strict", "--", "dotnet", "WasaCommunity.dll"],
              "image": "[parameters('backendImage')]",
              "ports": [
                {
                  "port": 5000
                }
              ],
              "environmentVariables": [
                { "name": "UseMockData", "value":"false" },
                { "name": "ConnectionStrings__SQLServerConnection", "value":"[concat('Server=',parameters('dbDnsNameLabel'),'.',parameters('location'),parameters('azureContainerSuffix'),';Database=WasaCommunityData;User Id=sa;Password=P@ssw0rd!')]"},
                { "name": "ConnectionStrings__SQLServerOAuthConnection", "value":"[concat('Server=',parameters('dbDnsNameLabel'),'.',parameters('location'),parameters('azureContainerSuffix'),';Database=WasaCommunityData.OAuth;User Id=sa;Password=P@ssw0rd!')]"},
                { "name": "ApplicationUrl", "value":"[concat('http://',parameters('appDnsNameLabel'),'.',parameters('location'),parameters('azureContainerSuffix'),':5000')]"},
                { "name": "UseAzureActiveDirectory", "value": "false"}
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.0
                }
              }
            }
          }
        ],       
        "imageRegistryCredentials": [
          {
            "server": "ivregistry.azurecr.io",
            "username": "ivregistry",
            "password": "Rwp7Kj0Aky1ZaHIR+mX2EfbglEWn0cUO"
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[parameters('appDnsNameLabel')]",
          "ports": [
            {
              "protocol": "TCP",
              "port": 80
            },
            {
              "protocol": "TCP",
              "port": 5000
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('dbContainerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('database')]",
            "properties": {
              "command": [],
              "image": "[parameters('databaseImage')]",
              "ports": [
                {
                  "port": 1433
                }
              ],
              "environmentVariables": [
                { "name": "ACCEPT_EULA", "value":"Y" },
                { "name": "SA_PASSWORD", "value":"P@ssw0rd!" },
                { "name": "MSSQL_PID", "value":"Express" }                
              ],
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 4.0
                }
              },            
              "volumeMounts": [{
                "name": "[parameters('volumeName')]",
                "mountPath": "[parameters('mountPoint')]"
              }]                        
            }        
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "ivregistry.azurecr.io",
            "username": "ivregistry",
            "password": "Rwp7Kj0Aky1ZaHIR+mX2EfbglEWn0cUO"
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[parameters('dbDnsNameLabel')]",
          "ports": [
            {
              "protocol": "TCP",
              "port": 1433
            }
          ]
        },
        "volumes": [{
          "name": "[parameters('volumeName')]",
          "azureFile": {
            "shareName": "[parameters('shareName')]",
            "storageAccountName": "[parameters('storageAccountName')]",
            "storageAccountKey": "[parameters('storageAccountKey')]"
          }
        }]  
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('appContainerGroupName'))).ipAddress.ip]"
    }
  }
}
